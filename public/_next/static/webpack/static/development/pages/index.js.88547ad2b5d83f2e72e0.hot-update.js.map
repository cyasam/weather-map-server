{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.88547ad2b5d83f2e72e0.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { Component } from 'react';\nimport { appReq, googleMapInit } from '../helpers';\n\nclass App extends Component {\n  state = {\n    map: null,\n    mapCenter: {\n      lat: 52.026,\n      lng: 15.0551,\n    },\n    cities: [\n      {\n        name: 'Istanbul',\n        lat: 41.01384,\n        lng: 28.94966,\n      },\n      {\n        name: 'Ankara',\n        lat: 39.91987,\n        lng: 32.85427,\n      },\n      {\n        name: 'Izmir',\n        lat: 38.41273,\n        lng: 27.13838,\n      },\n      {\n        name: 'Brussels',\n        lat: 50.85045,\n        lng: 4.34878,\n      },\n      {\n        name: 'Berlin',\n        lat: 52.52437,\n        lng: 13.41053,\n      },\n      {\n        name: 'Frankfurt',\n        lat: 50.11552,\n        lng: 8.68417,\n      },\n      {\n        name: 'Munich',\n        lat: 48.13743,\n        lng: 11.57549,\n      },\n      {\n        name: 'London',\n        lat: 51.50853,\n        lng: -0.12574,\n      },\n      {\n        name: 'Paris',\n        lat: 48.85341,\n        lng: 2.3488,\n      },\n      {\n        name: 'Milano',\n        lat: 45.46427,\n        lng: 9.18951,\n      },\n      {\n        name: 'Rome',\n        lat: 41.89193,\n        lng: 12.51133,\n      },\n      {\n        name: 'Vienna',\n        lat: 48.20849,\n        lng: 16.37208,\n      },\n      {\n        name: 'Stockholm',\n        lat: 59.33258,\n        lng: 18.0649,\n      },\n      {\n        name: 'Oslo',\n        lat: 59.91273,\n        lng: 10.74609,\n      },\n      {\n        name: 'Copenhagen',\n        lat: 55.67594,\n        lng: 12.56553,\n      },\n      {\n        name: 'Helsinki',\n        lat: 60.16952,\n        lng: 24.93545,\n      },\n      {\n        name: 'Athens',\n        lat: 37.97945,\n        lng: 23.71622,\n      },\n      {\n        name: 'Madrid',\n        lat: 40.4165,\n        lng: -3.70256,\n      },\n      {\n        name: 'Barcelona',\n        lat: 41.38879,\n        lng: 2.15899,\n      },\n      {\n        name: 'Moscow',\n        lat: 55.75222,\n        lng: 37.61556,\n      },\n      {\n        name: 'Warsaw',\n        lat: 52.22977,\n        lng: 21.01178,\n      },\n      {\n        name: 'Bucharest',\n        lat: 44.43225,\n        lng: 26.10626,\n      },\n      {\n        name: 'Riga',\n        lat: 56.946,\n        lng: 24.10589,\n      },\n      {\n        name: 'Minsk',\n        lat: 53.9,\n        lng: 27.56667,\n      },\n      {\n        name: 'Kiev',\n        lat: 50.45466,\n        lng: 30.5238,\n      },\n      {\n        name: 'Zagreb',\n        lat: 45.81444,\n        lng: 15.97798,\n      },\n      {\n        name: 'Sarajevo',\n        lat: 43.84864,\n        lng: 18.35644,\n      },\n      {\n        name: 'Budapest',\n        lat: 47.49801,\n        lng: 19.03991,\n      },\n    ],\n  };\n  componentDidMount() {\n    if (!this.state.map) {\n      googleMapInit()\n        .then(() => {\n          return this.onLoadGoogleMapsScript();\n        })\n        .then(responses => {\n          responses.forEach(response => {\n            const {\n              currently: { icon },\n              latitude,\n              longitude,\n            } = response.data;\n            this.createMarkers(latitude, longitude, icon);\n          });\n        });\n    }\n  }\n\n  createMarkers(lat, lng, icon) {\n    const iconBase = '/static/images/weather-icons';\n    const iconSize = {\n      width: 36,\n      height: 36,\n    };\n\n    const iconObj = {\n      url: `${iconBase}/${icon}.svg`,\n      scaledSize: new google.maps.Size(iconSize.width, iconSize.height),\n      anchor: new google.maps.Point(\n        iconSize.width / 2,\n        (iconSize.width / 2) * 3,\n      ),\n    };\n\n    // Create markers.\n    const marker = new google.maps.Marker({\n      position: new google.maps.LatLng(lat, lng),\n      icon: iconObj,\n      map: this.state.map,\n    });\n  }\n\n  onLoadGoogleMapsScript() {\n    const { mapCenter, cities } = this.state;\n    const { lat, lng } = mapCenter;\n\n    this.setState({\n      map: new google.maps.Map(document.getElementById('map'), {\n        center: { lat, lng },\n        zoom: 5,\n        minZoom: 5,\n        maxZoom: 8,\n      }),\n    });\n\n    const promiseCities = cities.map(city => {\n      return appReq.get(`/get-weather?latlng=${city.lat},${city.lng}`);\n    });\n\n    return Promise.all(promiseCities);\n  }\n\n  render() {\n    return (\n      <div id=\"map-wrapper\">\n        <div id=\"map\" />\n        <style global jsx>\n          {`\n            html,\n            body,\n            #__next {\n              width: 100%;\n              height: 100%;\n              margin: 0;\n              padding: 0;\n            }\n            #map-wrapper,\n            #map {\n              display: flex;\n              width: 100%;\n              height: 100%;\n            }\n          `}\n        </style>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AA9IA;AACA;;;;;;AAoJA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAHA;AACA;AASA;AACA;AACA;AACA;AAHA;AAKA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AADA;AASA;AACA;AACA;AAEA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAsBA;;;;AA7OA;AACA;AA+OA;;;;A","sourceRoot":""}